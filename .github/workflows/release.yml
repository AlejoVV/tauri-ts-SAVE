name: Release Tauri App

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'El tag para la release (ej. v1.0.1)'
        required: true
        type: string
      mark_as_prerelease:
        description: '¿Marcar esta release como pre-release?'
        required: false
        type: boolean
        default: false
      create_draft:
        description: '¿Crear la release como borrador?'
        required: false
        type: boolean
        default: true

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rust-src

      - name: Cache Rust dependencies
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Set release environment variables
        run: |
          echo "RELEASE_TAG=${{ github.event.inputs.tag_name || github.ref_name }}" >> $GITHUB_ENV
          echo "RELEASE_DRAFT=${{ github.event.inputs.create_draft != '' && github.event.inputs.create_draft || 'true' }}" >> $GITHUB_ENV
          echo "RELEASE_PRERELEASE=${{ github.event.inputs.mark_as_prerelease != '' && github.event.inputs.mark_as_prerelease || 'false' }}" >> $GITHUB_ENV

      - name: Build Tauri application and create GitHub Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ env.RELEASE_TAG }}
          releaseName: Herramienta SAVE ${{ env.RELEASE_TAG }}
          releaseBody: 'Consulta los assets para descargar e instalar esta versión.'
          releaseDraft: ${{ env.RELEASE_DRAFT }}
          prerelease: ${{ env.RELEASE_PRERELEASE }}
